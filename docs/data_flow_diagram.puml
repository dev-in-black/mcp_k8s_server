@startuml MCP Kubernetes Server Data Flow Diagram

!theme minty

skinparam componentStyle rectangle
skinparam linetype polyline
skinparam backgroundColor #FFFFFF

' Define external entities
actor "LLM Client" as Client
cloud "Kubernetes\nCluster" as K8sCluster

' Define processes
rectangle "MCP Protocol Handler" as ProtocolHandler #lightblue
rectangle "Resource Interface" as ResourceInterface #lightgreen
rectangle "Tool Interface" as ToolInterface #lightgreen
rectangle "Kubernetes Interface" as K8sInterface #lightyellow

' Define data stores
database "Kubernetes API" as K8sAPI #lightgray

' Define data flows
Client -[#blue]-> ProtocolHandler : 1. Resource Request\nor Tool Request
ProtocolHandler -[#green]-> ResourceInterface : 2a. Resource URI\n(kubernetes://[type]/[ns]/[name])
ProtocolHandler -[#red]-> ToolInterface : 2b. Tool Call\n(parameters)
ResourceInterface -[#green]-> K8sInterface : 3a. Get Resource Data
ToolInterface -[#red]-> K8sInterface : 3b. Execute Operation
K8sInterface -[#orange]-> K8sAPI : 4. API Calls
K8sAPI -[#orange]-> K8sCluster : 5. Query/Modify\nCluster
K8sCluster -[#purple]-> K8sAPI : 6. Resource/Status\nData
K8sAPI -[#purple]-> K8sInterface : 7. Response Data
K8sInterface -[#green]-> ResourceInterface : 8a. Resource Data
K8sInterface -[#red]-> ToolInterface : 8b. Operation Result
ResourceInterface -[#green]-> ProtocolHandler : 9a. Formatted\nResource Data
ToolInterface -[#red]-> ProtocolHandler : 9b. Formatted\nTool Result
ProtocolHandler -[#blue]-> Client : 10. Response

' Add notes for clarification
note right of ProtocolHandler
  Handles MCP protocol, parsing
  requests and formatting responses
end note

note right of ResourceInterface
  URI format:
  kubernetes://nodes
  kubernetes://deployments/default
  kubernetes://pods/kube-system/coredns-abc123
end note

note right of ToolInterface
  Tool categories:
  - Operations (scale, restart, delete)
  - Monitoring (health, usage, events)
  - Status (diagnostics, checks)
end note

note right of K8sInterface
  Provides unified access using:
  - Direct Kubernetes API client
  - kubectl command wrapper
end note

' Add legend
legend
  Data Flow Types
  ==
  <back:blue>   </back> MCP Protocol Communication
  <back:green>  </back> Resource Data Flow
  <back:red>    </back> Tool Operation Flow
  <back:orange> </back> API Request Flow
  <back:purple> </back> Response Data Flow
endlegend

@enduml
