@startuml MCP Kubernetes Server Architecture

' Define components
package "MCP Kubernetes Server" {
  [KubernetesMcpServer] as Server
  [ResourceHandlers] as Resources
  [ToolHandlers] as Tools
  
  package "Kubernetes API Interface" {
    [KubernetesApiClient] as ApiClient
    [KubectlWrapper] as Kubectl
  }
  
  package "Resource Handlers" {
    [NodeResourceHandler] as NodeHandler
    [DeploymentResourceHandler] as DeploymentHandler
    [BaseResourceHandler] as BaseHandler
    [ResourceUriParser] as UriParser
  }
  
  package "Tool Handlers" {
    [KubernetesOperations] as Operations
    [KubernetesMonitoring] as Monitoring
    [KubernetesStatus] as Status
  }
}

' External components
cloud "Kubernetes Cluster" as K8sCluster {
  [API Server] as ApiServer
  [Nodes] as K8sNodes
  [Deployments] as K8sDeployments
  [Services] as K8sServices
  [Other Resources] as K8sOtherResources
}

[LLM Client] as Client

' Define relationships
Client --> Server : MCP Protocol
Server --> Resources : Delegates resource\nrequests
Server --> Tools : Delegates tool\nrequests

Resources --> ApiClient : Retrieves data
Resources --> Kubectl : Executes commands
Tools --> ApiClient : Retrieves data
Tools --> Kubectl : Executes commands

BaseHandler <|-- NodeHandler : extends
BaseHandler <|-- DeploymentHandler : extends
Resources --> UriParser : Parses URIs

ApiClient --> ApiServer : REST API calls
Kubectl --> ApiServer : kubectl commands

ApiServer --> K8sNodes : Manages
ApiServer --> K8sDeployments : Manages
ApiServer --> K8sServices : Manages
ApiServer --> K8sOtherResources : Manages

@enduml
