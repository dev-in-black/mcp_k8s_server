# Copyright (c) 2025, Lewis Guo. All rights reserved.
# Author: Lewis Guo <guolisen@gmail.com>
# Created: April 05, 2025
#
# Description: YAML configuration for the MCP Kubernetes server: deployment.yaml
#
# This source code is licensed under the MIT license found in the
# LICENSE file in the root directory of this source tree.

apiVersion: apps/v1
kind: Deployment
metadata:
  name: mcp-k8s-server
  labels:
    app: mcp-k8s-server
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mcp-k8s-server
  template:
    metadata:
      labels:
        app: mcp-k8s-server
    spec:
      serviceAccountName: mcp-k8s-server
      containers:
      - name: mcp-k8s-server
        image: guolisen/mcp-k8s-server:2.8
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 8000
          name: http
        env:
        - name: TRANSPORT
          value: "sse"
        - name: PORT
          value: "8000"
        - name: HOST
          value: "0.0.0.0"
        - name: CONFIG_PATH
          value: "/app/config/config.yaml"
        volumeMounts:
        - name: config-volume
          mountPath: /app/config
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
          runAsGroup: 65534
          runAsNonRoot: true
          runAsUser: 65534
          seccompProfile:
            type: RuntimeDefault
      volumes:
      - name: config-volume
        configMap:
          name: mcp-k8s-server-config
---
apiVersion: v1
kind: Service
metadata:
  name: mcp-k8s-server
  labels:
    app: mcp-k8s-server
spec:
  selector:
    app: mcp-k8s-server
  ports:
  - port: 8000
    targetPort: 8000
    protocol: TCP
    name: http
  type: NodePort
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: mcp-k8s-server
  labels:
    app: mcp-k8s-server
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: mcp-k8s-server
  labels:
    app: mcp-k8s-server
rules:
# Allow read access to most resources
- apiGroups: [""]
  resources: ["pods", "services", "configmaps", "secrets", "namespaces", "nodes", "persistentvolumes", "persistentvolumeclaims", "events"]
  verbs: ["get", "list", "watch"]
- apiGroups: ["apps"]
  resources: ["deployments", "statefulsets", "daemonsets", "replicasets"]
  verbs: ["get", "list", "watch"]
- apiGroups: ["batch"]
  resources: ["jobs", "cronjobs"]
  verbs: ["get", "list", "watch"]
- apiGroups: ["networking.k8s.io"]
  resources: ["ingresses"]
  verbs: ["get", "list", "watch"]
- apiGroups: ["metrics.k8s.io"]
  resources: ["pods", "nodes"]
  verbs: ["get", "list"]
# Allow operations on resources
- apiGroups: [""]
  resources: ["pods", "pods/exec", "pods/log"]
  verbs: ["create", "delete", "deletecollection", "patch", "update"]
- apiGroups: ["apps"]
  resources: ["deployments", "statefulsets", "daemonsets"]
  verbs: ["create", "delete", "deletecollection", "patch", "update"]
- apiGroups: ["batch"]
  resources: ["jobs", "cronjobs"]
  verbs: ["create", "delete", "deletecollection", "patch", "update"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: mcp-k8s-server
  labels:
    app: mcp-k8s-server
subjects:
- kind: ServiceAccount
  name: mcp-k8s-server
  namespace: default
roleRef:
  kind: ClusterRole
  name: mcp-k8s-server
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: mcp-k8s-server-config
  labels:
    app: mcp-k8s-server
data:
  config.yaml: |
    # MCP Kubernetes Server Configuration

    server:
      name: mcp-k8s-server
      transport: sse
      port: 8000
      host: 0.0.0.0

    kubernetes:
      # Path to kubeconfig file
      # If empty, will try to use in-cluster config when running in Kubernetes
      # or ~/.kube/config when running locally
      config_path: " /etc/rancher/rke2/rke2.yaml"
      
      # Kubernetes context to use
      # If empty, will use the current context from kubeconfig
      context: ""
      
      # Default namespace
      namespace: default
      
      # Resource types to include
      resource_types:
        - pods
        - deployments
        - services
        - configmaps
        - secrets
        - persistentvolumeclaims
        - persistentvolumes
        - nodes
        - namespaces
        - events
        - ingresses
        - statefulsets
        - daemonsets
        - jobs
        - cronjobs
        - replicasets

    monitoring:
      # Enable monitoring features
      enabled: true
      
      # Polling interval in seconds
      interval: 30
      
      # Resources to monitor
      resources:
        - pods
        - nodes
        - deployments
        
      # Metrics to collect
      metrics:
        - cpu
        - memory
        - disk
        - network